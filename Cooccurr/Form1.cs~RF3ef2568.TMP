using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;

namespace Cooccurr
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        List<Bitmap> imagearxeio = new List<Bitmap>();
        public ImageData[] images ;
        Cooccurr comatrix = new Cooccurr();
        double[,] CoOCCarrate;

        


        public struct ImageData
        {
            public int ID;
            public Bitmap Image;

            public int ImageWidth;
            public int ImageHeight;

            public int Dimensions;


            public int[,] RImageTable;  // Ολη η εικόνα σε διδιάστατο πινακα
            public int[,] GImageTable;
            public int[,] BImageTable;
            public int[,] LImageTable;



            public double Homogenity;
            public double Contrast;
            public double max;
            public double Disimilarity;
            public double Correlation;
            public double thesix;
            public double thesiy;
            public double Energy;
            
            public double Entropia;
            
            


        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        

        private void button3_Click(object sender, EventArgs e)
        {
            
            listBox1.Items.Clear();
            //we define the size of images[]
            images = new ImageData[imagearxeio.Count];
            int tag=0;
            double temp=1000;
            //we extract all the features for every image
            for (int i = 0; i < imagearxeio.Count; i++)
            {
                
                CoOCCarrate = comatrix.Apply(imagearxeio[i], 1, 1,trackBar1.Value);
                comatrix.CalcElements(CoOCCarrate,trackBar1.Value);

                //we store the data which returns function comatrix in images[]
                images[i].ID = i;
                images[i].Entropia = comatrix.Entropy;
                images[i].Energy = comatrix.Energy;
                images[i].Contrast = comatrix.Contrast;
                images[i].Homogenity = comatrix.Homogenity;
                images[i].max = comatrix.max;
                images[i].Disimilarity = comatrix.Disimilarity;
                images[i].Correlation = comatrix.Correlation;
            }


            for (int i = 1; i < imagearxeio.Count; i++)
            {
                double dist = comatrix.Euclidean(images[0], images[i]);

                listBox1.Items.Add(string.Format("{0} {1}", i,dist));
                if(dist<temp)
                {
                    temp = dist;
                    tag=i;
                    
                }
            }
            pictureBox2.Image = imagearxeio[tag];
            
            /*/mono gia 2 eikones 
            label1.Text = comatrix.Euclidean(images[0], images[4]).ToString("G5");
            //
            label1.Text = "entropy :" + images[0].Entropia.ToString("G5");
            label2.Text = "energy :" + images[0].Energy.ToString("G5");
            label3.Text = "contrast :" + images[0].Contrast.ToString("G5");
            label4.Text = "homogenity :" + images[0].Homogenity.ToString("G5");
            label5.Text = "max value : " + images[0].max.ToString("G5");            
            label7.Text = "Dissimilarity :" + images[0].Disimilarity.ToString("G5");
            label8.Text = "Correlation :" + images[0].Correlation.ToString("G5");
            /*/

        }

        private void findThisToolStripMenuItem_Click(object sender, EventArgs e)
        {

            

                imagearxeio.Clear();
                openFileDialog1.Title = "Open image for process";
                openFileDialog1.Filter = "Images (*.BMP;*.JPG;*.GIF;*.PNG)|*.BMP;*.JPG;*.GIF;*.PNG|" +
                 "All files (*.*)|*.*";
                if (openFileDialog1.ShowDialog() == DialogResult.OK)
                {


                    try
                    {
                        string ImageFileName = openFileDialog1.FileName;

                        imagearxeio.Add(new Bitmap(ImageFileName));
                        pictureBox1.Image = imagearxeio[0];
                        
                    }
                    catch
                    {
                    }
                }

                if (checkBox1.Checked)
                {
                    //to orio pou mas deixnei poses fotinotites tha exoume to pairnoume apo trackbar
                    CoOCCarrate = comatrix.Apply(imagearxeio[0], 1, 1, trackBar1.Value);
                    comatrix.CalcElements(CoOCCarrate, trackBar1.Value);

                    //
                    label1.Text = "entropy :" + comatrix.Entropy.ToString("G5");
                    label2.Text = "energy :" + comatrix.Energy.ToString("G5");
                    label3.Text = "contrast :" + comatrix.Contrast.ToString("G5");
                    label4.Text = "homogenity :" + comatrix.Homogenity.ToString("G5");
                    label5.Text = "max value : " + comatrix.max.ToString("G5");
                    //label6.Text = "max value [x,y] :" + comatrix.thesix.ToString("G5") + "," + comatrix.thesiy.ToString("G5"); ;
                    label7.Text = "Dissimilarity :" + comatrix.Disimilarity.ToString("G5");
                    label8.Text = "Correlation :" + comatrix.Correlation.ToString("G5");
                    label6.Text = ((comatrix.Entropy + comatrix.Energy + comatrix.Contrast + comatrix.Homogenity + comatrix.max + comatrix.Disimilarity + comatrix.Correlation) / 7).ToString();

                    //gia na ta emfanisoume ston pinaka akolouthoume tin parakato diadikasia
                    DataTable dt = new DataTable();
                    DataView myview = new DataView(dt);//Το αντικείμενο DataView που περιέχει το DataTable σου
                    DataRow myRow;
                    int apoxroseis = (int)Math.Pow(2, trackBar1.Value);


                    dt.Clear();

                    dt.Columns.Add("--");
                    for (int i = 0; i < apoxroseis; i++)
                    {
                        dt.Columns.Add(i.ToString());
                    }




                    for (int i = 0; i < apoxroseis; i++)
                    {
                        myRow = dt.NewRow();
                        myRow[0] = i.ToString();
                        for (int j = 1; j < apoxroseis + 1; j++)
                        {
                            myRow[j] = CoOCCarrate[i, j - 1].ToString("G2");

                        }

                        dt.Rows.Add(myRow);

                    }


                    dataGridView1.DataSource = myview;

                    dataGridView1.ColumnHeadersVisible = true;



                    foreach (DataGridViewColumn i in
                     dataGridView1.Columns)
                    {
                        i.SortMode = DataGridViewColumnSortMode.NotSortable;
                        i.Width = 50;
                    }

                    //label5.Visible = false;
                    //this.Cursor = Cursors.Default;*/
                }
        }

        private void imageFolderToolStripMenuItem_Click(object sender, EventArgs e)
        {

            {
                if (folderBrowserDialog1.ShowDialog() == DialogResult.OK)
                {
                    try
                    {
                        DirectoryInfo di = new DirectoryInfo(folderBrowserDialog1.SelectedPath); // give path

                        FileInfo[] finfos = di.GetFiles("*.jpg", SearchOption.TopDirectoryOnly);


                        for (int i = 0; i < finfos.Length; i++)
                        {
                            imagearxeio.Add(((Bitmap)Image.FromFile(finfos[i].FullName)));

                        }


                    }
                    catch
                    {


                    }
                }


                
                button3.Enabled = true;
            }
        }


    }
}
